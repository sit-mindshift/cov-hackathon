name: CI/CD
on:
  push:
    branches:
    - Rotfuks-patch-1

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: shopsave
  GITHUB_SHA: ${{ github.sha }}  
  SERVER_DB: shopsafe-db
  SERVER_IMAGE: shopsafe-server
  VIEW_IMAGE: shopsafe-view
  GKE_SERVER_CLUSTER: shopsave-k8s-cluster
  GKE_ZONE: us-central1-c
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GKE_KEY: ${{ secrets.GKE_AUTH_BASE64 }}
  BACKEND_WORKING_DIRECTORY: ./backend
  REGISTRY_HOSTNAME: gcr.io
  
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@master

    
     # Gradle Build
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ env.BACKEND_WORKING_DIRECTORY }}
    # Setup JDK  
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    # Build
    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ${{ env.BACKEND_WORKING_DIRECTORY }} 
    - name: Docker
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$SERVER_IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          --build-arg JAR_FILE=build/libs/*.jar .
      working-directory: ${{ env.BACKEND_WORKING_DIRECTORY }}
        
        
    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_AUTH_BASE64 }} 
    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: gcloud auth configure-docker       
    - run: docker push $REGISTRY_HOSTNAME/$GKE_PROJECT/$SERVER_IMAGE:$GITHUB_SHA    
    - run: gcloud container clusters get-credentials $GKE_SERVER_CLUSTER --zone $GKE_ZONE --project=$GKE_PROJECT
    - run: kubectl apply --filename backend/k8s/backend-service-deployment.yml
    #  run: |
    #    gcloud container clusters get-credentials "$GKE_SERVER_CLUSTER" --zone="$GKE_ZONE" --project="$GKE_PROJECT"
    #    kubectl set image deployment/"$SERVER_IMAGE" "$SERVER_IMAGE"="$REGISTRY_HOSTNAME"/$GKE_PROJECT/$SERVER_IMAGE:$GITHUB_SHA"
    
    # Deploy the Docker image to the GKE cluster
    # kubectl set image deployment/"$SERVER_IMAGE" "$SERVER_IMAGE"="eu.gcr.io/$GKE_PROJECT/$SERVER_IMAGE:$GITHUB_SHA"
    #- name: Deploy Server
    #  run: |
    #    gcloud container clusters get-credentials "$GKE_SERVER_CLUSTER" --zone="$GKE_ZONE" --project="$GKE_PROJECT"
    #    kubectl expose deployment/"$IMAGE" --type=LoadBalancer --port 8080 --target-port 8080
    # kubectl set image deployment/"$SERVER_IMAGE" "$SERVER_IMAGE"="eu.gcr.io/$GKE_PROJECT/$SERVER_IMAGE:$GITHUB_SHA"
        
        
    # Deploy the Docker image to the GKE cluster
    #- name: Validate Services
    #  run: | 
    #    kubectl get service
        
